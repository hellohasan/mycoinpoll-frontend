{"version":3,"file":"useFilters-BzlsH-OH.js","sources":["../../../../composables/useFilters.js"],"sourcesContent":["// composables/useFilters.js\n\nexport const useFilters = () => {\n  /**\n   * Format date string to YYYY-MM-DD format\n   * @param {string} dateString - Date string to format\n   * @returns {string} Formatted date string\n   */\n  const customDate = (dateString) => {\n    if (!dateString) return \"\";\n\n    const date = new Date(dateString);\n    return date.toLocaleDateString(\"en-CA\");\n  };\n\n  /**\n   * Format date string to YYYY-MM-DD HH:MM:SS AM/PM format\n   * @param {string} dateString - Date string to format\n   * @returns {string} Formatted date and time string\n   */\n  const customDateTime = (dateString) => {\n    if (!dateString) return \"\";\n\n    const date = new Date(dateString);\n    const formattedDate = date.toLocaleDateString(\"en-CA\");\n    const formattedTime = date.toLocaleTimeString(\"en-US\", {\n      hour12: true,\n      hour: \"2-digit\",\n      minute: \"2-digit\",\n      second: \"2-digit\",\n    });\n\n    return `${formattedDate} ${formattedTime}`;\n  };\n\n  const formatDate = (dateString) => {\n    return new Date(dateString).toLocaleDateString(\"en-US\", {\n      year: \"numeric\",\n      month: \"short\",\n      day: \"numeric\",\n    });\n  };\n\n  return {\n    customDate,\n    customDateTime,\n    formatDate,\n  };\n};\n"],"names":[],"mappings":"AAEY,MAAC,aAAa,MAAM;AAM9B,QAAM,aAAa,CAAC,eAAe;AACjC,QAAI,CAAC,WAAY,QAAO;AAExB,UAAM,OAAO,IAAI,KAAK,UAAU;AAChC,WAAO,KAAK,mBAAmB,OAAO;AAAA,EACvC;AAOD,QAAM,iBAAiB,CAAC,eAAe;AACrC,QAAI,CAAC,WAAY,QAAO;AAExB,UAAM,OAAO,IAAI,KAAK,UAAU;AAChC,UAAM,gBAAgB,KAAK,mBAAmB,OAAO;AACrD,UAAM,gBAAgB,KAAK,mBAAmB,SAAS;AAAA,MACrD,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,QAAQ;AAAA,MACR,QAAQ;AAAA,IACd,CAAK;AAED,WAAO,GAAG,aAAa,IAAI,aAAa;AAAA,EACzC;AAED,QAAM,aAAa,CAAC,eAAe;AACjC,WAAO,IAAI,KAAK,UAAU,EAAE,mBAAmB,SAAS;AAAA,MACtD,MAAM;AAAA,MACN,OAAO;AAAA,MACP,KAAK;AAAA,IACX,CAAK;AAAA,EACF;AAED,SAAO;AAAA,IACL;AAAA,IACA;AAAA,IACA;AAAA,EACD;AACH;"}