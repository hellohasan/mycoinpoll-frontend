import{s as y,x as g,y as i,c as l,o as a,g as o,a as r,t as u,f as v,v as b,n as c}from"./--rz71Vb.js";const h=["for"],S=["innerHTML"],k={key:0},x={class:"input bg-border-input"},M=["rows","id","placeholder","required","readonly"],V={key:1,class:"invalid-feedback d-block"},B={__name:"Textarea",props:y({message:{type:String,default:null},rows:{type:Number,default:3},id:{type:String,default:null},label:{type:String,default:null},error:{type:String,default:null},col:{type:String,default:"col-md-12"},required:{type:Boolean,default:!1},readonly:{type:Boolean,default:!1},placeholder:String},{modelValue:{},modelModifiers:{}}),emits:["update:modelValue"],setup(e){const t=e,d=g(e,"modelValue"),s=i(()=>t.id||`textarea-${Math.random().toString(36).substr(2,9)}`),m=i(()=>t.placeholder||t.label||"");return(p,n)=>(a(),l("div",{class:c(["form-group",e.col])},[e.label?(a(),l("label",{key:0,class:"label",for:s.value},[r("div",{innerHTML:e.label},null,8,S),e.message?(a(),l("code",k,u(e.message),1)):o("",!0)],8,h)):o("",!0),r("div",x,[v(r("textarea",{"onUpdate:modelValue":n[0]||(n[0]=f=>d.value=f),class:c({"is-invalid":e.error}),rows:e.rows,id:s.value,placeholder:m.value,required:e.required,readonly:e.readonly},null,10,M),[[b,d.value]])]),e.error?(a(),l("div",V,u(e.error),1)):o("",!0)],2))}};export{B as _};
