import{P as z,Q as m,r as O,R as F,S as M,E as q,U as B,V as S,W as U,X as T,Y as V,Z as $,u as j,z as L,$ as x,a0 as H,a1 as K,a2 as h}from"./BtVSoYiO.js";const I=t=>t==="defer"||t===!1;function N(...t){var w;const n=typeof t[t.length-1]=="string"?t.pop():void 0;typeof t[0]!="string"&&t.unshift(n);let[s,i,e={}]=t;if(typeof s!="string")throw new TypeError("[nuxt] [asyncData] key must be a string.");if(typeof i!="function")throw new TypeError("[nuxt] [asyncData] handler must be a function.");const a=z(),l=i,p=()=>m.value,P=()=>a.isHydrating?a.payload.data[s]:a.static.data[s];e.server=e.server??!0,e.default=e.default??p,e.getCachedData=e.getCachedData??P,e.lazy=e.lazy??!1,e.immediate=e.immediate??!0,e.deep=e.deep??m.deep,e.dedupe=e.dedupe??"cancel";const y=e.getCachedData(s,a),v=y!=null;if(!a._asyncData[s]||!e.immediate){(w=a.payload._errors)[s]??(w[s]=m.errorValue);const c=e.deep?O:F;a._asyncData[s]={data:c(v?y:e.default()),pending:O(!v),error:M(a.payload._errors,s),status:O("idle"),_default:e.default}}const r={...a._asyncData[s]};delete r._default,r.refresh=r.execute=(c={})=>{if(a._asyncDataPromises[s]){if(I(c.dedupe??e.dedupe))return a._asyncDataPromises[s];a._asyncDataPromises[s].cancelled=!0}if(c._initial||a.isHydrating&&c._initial!==!1){const u=c._initial?y:e.getCachedData(s,a);if(u!=null)return Promise.resolve(u)}r.pending.value=!0,r.status.value="pending";const f=new Promise((u,o)=>{try{u(l(a))}catch(_){o(_)}}).then(async u=>{if(f.cancelled)return a._asyncDataPromises[s];let o=u;e.transform&&(o=await e.transform(u)),e.pick&&(o=Q(o,e.pick)),a.payload.data[s]=o,r.data.value=o,r.error.value=m.errorValue,r.status.value="success"}).catch(u=>{if(f.cancelled)return a._asyncDataPromises[s];r.error.value=$(u),r.data.value=j(e.default()),r.status.value="error"}).finally(()=>{f.cancelled||(r.pending.value=!1,delete a._asyncDataPromises[s])});return a._asyncDataPromises[s]=f,a._asyncDataPromises[s]},r.clear=()=>G(a,s);const g=()=>r.refresh({_initial:!0}),D=e.server!==!1&&a.payload.serverRendered;{const c=q();if(c&&D&&e.immediate&&!c.sp&&(c.sp=[]),c&&!c._nuxtOnBeforeMountCbs){c._nuxtOnBeforeMountCbs=[];const o=c._nuxtOnBeforeMountCbs;B(()=>{o.forEach(_=>{_()}),o.splice(0,o.length)}),S(()=>o.splice(0,o.length))}D&&a.isHydrating&&(r.error.value||y!=null)?(r.pending.value=!1,r.status.value=r.error.value?"error":"success"):c&&(a.payload.serverRendered&&a.isHydrating||e.lazy)&&e.immediate?c._nuxtOnBeforeMountCbs.push(g):e.immediate&&g();const f=V();if(e.watch){const o=U(e.watch,()=>r.refresh());f&&T(o)}const u=a.hook("app:data:refresh",async o=>{(!o||o.includes(s))&&await r.refresh()});f&&T(u)}const b=Promise.resolve(a._asyncDataPromises[s]).then(()=>r);return Object.assign(b,r),b}function G(t,n){n in t.payload.data&&(t.payload.data[n]=void 0),n in t.payload._errors&&(t.payload._errors[n]=m.errorValue),t._asyncData[n]&&(t._asyncData[n].data.value=void 0,t._asyncData[n].error.value=m.errorValue,t._asyncData[n].pending.value=!1,t._asyncData[n].status.value="idle"),n in t._asyncDataPromises&&(t._asyncDataPromises[n]&&(t._asyncDataPromises[n].cancelled=!0),t._asyncDataPromises[n]=void 0)}function Q(t,n){const s={};for(const i of n)s[i]=t[i];return s}function W(t,n,s){const[i={},e]=typeof n=="string"?[{},n]:[n,s],a=L(()=>h(t)),l=i.key||x([e,typeof a.value=="string"?a.value:"",...X(i)]);if(!l||typeof l!="string")throw new TypeError("[nuxt] [useFetch] key must be a string: "+l);if(!t)throw new Error("[nuxt] [useFetch] request is missing.");const p=l===e?"$f"+l:l;if(!i.baseURL&&typeof a.value=="string"&&a.value[0]==="/"&&a.value[1]==="/")throw new Error('[nuxt] [useFetch] the request URL must not start with "//".');const{server:P,lazy:y,default:v,transform:r,pick:g,watch:D,immediate:b,getCachedData:w,deep:c,dedupe:f,...u}=i,o=H({...K,...u,cache:typeof i.cache=="boolean"?void 0:i.cache}),_={server:P,lazy:y,default:v,transform:r,pick:g,immediate:b,getCachedData:w,deep:c,dedupe:f,watch:D===!1?[]:[o,a,...D||[]]};let d;return N(p,()=>{var R;(R=d==null?void 0:d.abort)==null||R.call(d,new DOMException("Request aborted as another request to the same endpoint was initiated.","AbortError")),d=typeof AbortController<"u"?new AbortController:{};const E=h(i.timeout);let C;return E&&(C=setTimeout(()=>d.abort(new DOMException("Request aborted due to timeout.","AbortError")),E),d.signal.onabort=()=>clearTimeout(C)),(i.$fetch||globalThis.$fetch)(a.value,{signal:d.signal,...o}).finally(()=>{clearTimeout(C)})},_)}function k(t,n,s){const[i={},e]=typeof n=="string"?[{},n]:[n,s];return W(t,{...i,lazy:!0},e)}function X(t){var s;const n=[((s=h(t.method))==null?void 0:s.toUpperCase())||"GET",h(t.baseURL)];for(const i of[t.params||t.query]){const e=h(i);if(!e)continue;const a={};for(const[l,p]of Object.entries(e))a[h(l)]=h(p);n.push(a)}return n}export{W as a,k as u};
