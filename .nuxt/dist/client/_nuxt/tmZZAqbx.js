import{h as l,y as m,r as h,j as f}from"./BtVSoYiO.js";import{u as g}from"./B22M1GYj.js";import{u as y,a as E}from"./Cd7iz5iy.js";function F(){const d=m(),u=l(),{toastError:r}=g(),n=()=>({baseURL:d.public.apiBase,onRequest({options:t}){u.token&&(t.headers instanceof Headers||(t.headers=new Headers(t.headers)),t.headers.set("Authorization",`Bearer ${u.token}`))},onRequestError({error:t}){return r("An error occurred while sending the request"),Promise.reject(t)},onResponse({response:t}){return t._data},onResponseError({error:t,response:e}){var s,a;switch(e==null?void 0:e.status){case 401:u.$reset(),r(((s=e._data)==null?void 0:s.message)||"Unauthorized! Please log in."),f("/auth/login");break;case 403:r("Access denied! or Invalid request!");break;case 404:r("Requested resource not found.");break;case 500:r("Internal server error.");break;default:r(((a=e==null?void 0:e._data)==null?void 0:a.message)||"An error occurred")}return Promise.reject(t)}});return{myFetch:async(t,e={})=>await $fetch(t,{...n(),...e,method:e.method||"GET"}),useOnlyFetch:(t,e={})=>{const s=h(null),a=h(!1),o=h(null),i=async()=>{a.value=!0,o.value=null;try{const c=await $fetch(t,{...n(),...e,method:e.method||"GET"});s.value=c}catch(c){o.value=c.message||"Something went wrong!"}finally{a.value=!1}};return i(),{data:s,pending:a,error:o,refresh:i}},useMyFetch:(t,e={})=>E(t,{...n(),...e,method:e.method||"GET"},"$UqgiltlUfE"),useMyLazyFetch:(t,e={})=>y(t,{...n(),...e,method:e.method||"GET"},"$HgqqyPIEgZ")}}export{F as u};
