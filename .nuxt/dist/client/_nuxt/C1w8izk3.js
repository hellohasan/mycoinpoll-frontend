import{j as h,D as d,i}from"./6IpCoGFE.js";import{u as m}from"./GevnLgCi.js";import{u as f,a as n}from"./CaNsbxwq.js";function q(){const c=d(),s=h(),{toastError:t}=m(),a=()=>({baseURL:c.public.apiBase,onRequest({options:r}){s.token&&(r.headers instanceof Headers||(r.headers=new Headers(r.headers)),r.headers.set("Authorization",`Bearer ${s.token}`))},onRequestError({error:r}){return t("An error occurred while sending the request"),Promise.reject(r)},onResponse({response:r}){return r._data},onResponseError({error:r,response:e}){var u,o;switch(e==null?void 0:e.status){case 401:s.$reset(),t(((u=e._data)==null?void 0:u.message)||"Unauthorized! Please log in."),i("/auth/login");break;case 403:t("Access denied! or Invalid request!");break;case 404:t("Requested resource not found.");break;case 500:t("Internal server error.");break;default:t(((o=e==null?void 0:e._data)==null?void 0:o.message)||"An error occurred")}return Promise.reject(r)}});return{myFetch:async(r,e={})=>await $fetch(r,{...a(),...e,method:e.method||"GET"}),useOnlyFetch:(r,e={})=>n(r,{...a(),...e,method:e.method||"GET",server:!1},"$UqgiltlUfE"),useMyFetch:(r,e={})=>n(r,{...a(),...e,method:e.method||"GET"},"$HgqqyPIEgZ"),useMyLazyFetch:(r,e={})=>f(r,{...a(),...e,method:e.method||"GET"},"$szE3KFZK0G")}}export{q as u};
